# Model Catalog
# This is the API of the Software Description Ontology at [https://w3id.org/okn/o/sdm](https://w3id.org/okn/o/sdm)
# The version of the OpenAPI document: v1.5.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

# package openapi2graphql

# software_configuration_api

type mutation {
  # Delete an existing SoftwareConfiguration
  # Delete an existing SoftwareConfiguration (more information in https://w3id.org/okn/o/sd#SoftwareConfiguration)
  # @param String! Id_ The ID of the SoftwareConfiguration to be retrieved
  # @param String! user Username
  # @return [null]
  SoftwareconfigurationsIdDelete(Id_: String!, user: String!): null

  # Update an existing SoftwareConfiguration
  # Updates an existing SoftwareConfiguration (more information in https://w3id.org/okn/o/sd#SoftwareConfiguration)
  # @param String! Id_ The ID of the SoftwareConfiguration to be retrieved
  # @param String! user Username
  # @param SoftwareConfiguration softwareConfiguration An old SoftwareConfigurationto be updated
  # @return [SoftwareConfiguration]
  SoftwareconfigurationsIdPut(Id_: String!, user: String!, softwareConfiguration: SoftwareConfiguration): SoftwareConfiguration

  # Create one SoftwareConfiguration
  # Create a new instance of SoftwareConfiguration (more information in https://w3id.org/okn/o/sd#SoftwareConfiguration)
  # @param String! user Username
  # @param SoftwareConfiguration softwareConfiguration Information about the SoftwareConfigurationto be created
  # @return [SoftwareConfiguration]
  SoftwareconfigurationsPost(user: String!, softwareConfiguration: SoftwareConfiguration): SoftwareConfiguration

}

type query {
  # List all instances of SoftwareConfiguration
  # Gets a list of all instances of SoftwareConfiguration (more information in https://w3id.org/okn/o/sd#SoftwareConfiguration)
  # @param String! username Name of the user graph to query
  # @param String! label Filter by label
  # @param Int! page Page number
  # @param Int! perPage Items per page
  # @return [[SoftwareConfiguration]]
  SoftwareconfigurationsGet(username: String!, label: String!, page: Int!, perPage: Int!): [SoftwareConfiguration]

  # Get a single SoftwareConfiguration by its id
  # Gets the details of a given SoftwareConfiguration (more information in https://w3id.org/okn/o/sd#SoftwareConfiguration)
  # @param String! Id_ The ID of the SoftwareConfiguration to be retrieved
  # @param String! username Name of the user graph to query
  # @return [SoftwareConfiguration]
  SoftwareconfigurationsIdGet(Id_: String!, username: String!): SoftwareConfiguration

}

