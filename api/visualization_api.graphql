# Model Catalog
# This is the API of the Software Description Ontology at [https://w3id.org/okn/o/sdm](https://w3id.org/okn/o/sdm)
# The version of the OpenAPI document: v1.5.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

# package openapi2graphql

# visualization_api

type mutation {
  # Delete an existing Visualization
  # Delete an existing Visualization (more information in https://w3id.org/okn/o/sd#Visualization)
  # @param String! Id_ The ID of the Visualization to be retrieved
  # @param String! user Username
  # @return [null]
  VisualizationsIdDelete(Id_: String!, user: String!): null

  # Update an existing Visualization
  # Updates an existing Visualization (more information in https://w3id.org/okn/o/sd#Visualization)
  # @param String! Id_ The ID of the Visualization to be retrieved
  # @param String! user Username
  # @param Visualization visualization An old Visualizationto be updated
  # @return [Visualization]
  VisualizationsIdPut(Id_: String!, user: String!, visualization: Visualization): Visualization

  # Create one Visualization
  # Create a new instance of Visualization (more information in https://w3id.org/okn/o/sd#Visualization)
  # @param String! user Username
  # @param Visualization visualization Information about the Visualizationto be created
  # @return [Visualization]
  VisualizationsPost(user: String!, visualization: Visualization): Visualization

}

type query {
  # List all instances of Visualization
  # Gets a list of all instances of Visualization (more information in https://w3id.org/okn/o/sd#Visualization)
  # @param String! username Name of the user graph to query
  # @param String! label Filter by label
  # @param Int! page Page number
  # @param Int! perPage Items per page
  # @return [[Visualization]]
  VisualizationsGet(username: String!, label: String!, page: Int!, perPage: Int!): [Visualization]

  # Get a single Visualization by its id
  # Gets the details of a given Visualization (more information in https://w3id.org/okn/o/sd#Visualization)
  # @param String! Id_ The ID of the Visualization to be retrieved
  # @param String! username Name of the user graph to query
  # @return [Visualization]
  VisualizationsIdGet(Id_: String!, username: String!): Visualization

}

