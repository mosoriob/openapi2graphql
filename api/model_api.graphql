# Model Catalog
# This is the API of the Software Description Ontology at [https://w3id.org/okn/o/sdm](https://w3id.org/okn/o/sdm)
# The version of the OpenAPI document: v1.5.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

# package openapi2graphql

# model_api

type mutation {
  # Delete an existing Model
  # Delete an existing Model (more information in https://w3id.org/okn/o/sdm#Model)
  # @param String! Id_ The ID of the Model to be retrieved
  # @param String! user Username
  # @return [null]
  ModelsIdDelete(Id_: String!, user: String!): null

  # Update an existing Model
  # Updates an existing Model (more information in https://w3id.org/okn/o/sdm#Model)
  # @param String! Id_ The ID of the Model to be retrieved
  # @param String! user Username
  # @param Model model An old Modelto be updated
  # @return [Model]
  ModelsIdPut(Id_: String!, user: String!, model: Model): Model

  # Create one Model
  # Create a new instance of Model (more information in https://w3id.org/okn/o/sdm#Model)
  # @param String! user Username
  # @param Model model Information about the Modelto be created
  # @return [Model]
  ModelsPost(user: String!, model: Model): Model

}

type query {
  # Get a Model
  # Gets the details of a single instance of a Model
  # @param String! label Label of NumericalIndex
  # @param String! customQueryName Name of the custom query
  # @param String! username Username to query
  # @return [[Model]]
  CustomModelIndexGet(label: String!, customQueryName: String!, username: String!): [Model]

  # Get a Model
  # Gets the details of a single instance of a Model
  # @param String! label Label of intervation
  # @param String! customQueryName Name of the custom query
  # @param String! username Username to query
  # @return [[Model]]
  CustomModelInterventionGet(label: String!, customQueryName: String!, username: String!): [Model]

  # Get a Model
  # Gets the details of a single instance of a Model
  # @param String! label region to search
  # @param String! customQueryName Name of the custom query
  # @param String! username Username to query
  # @return [[Model]]
  CustomModelRegionGet(label: String!, customQueryName: String!, username: String!): [Model]

  # Get a list of models
  # Gets a list of model filter by the label of a standard variable
  # @param String! label standard variable name
  # @param String! customQueryName Name of the custom query
  # @param String! username Username to query
  # @return [[Model]]
  CustomModelsStandardVariableGet(label: String!, customQueryName: String!, username: String!): [Model]

  # Get a list of Model
  # Get models by variable name
  # @param String! label variable to search
  # @param String! customQueryName Name of the custom query
  # @param String! username Username to query
  # @return [[Model]]
  CustomModelsVariableGet(label: String!, customQueryName: String!, username: String!): [Model]

  # List all instances of Model
  # Gets a list of all instances of Model (more information in https://w3id.org/okn/o/sdm#Model)
  # @param String! username Name of the user graph to query
  # @param String! label Filter by label
  # @param Int! page Page number
  # @param Int! perPage Items per page
  # @return [[Model]]
  ModelsGet(username: String!, label: String!, page: Int!, perPage: Int!): [Model]

  # Get a single Model by its id
  # Gets the details of a given Model (more information in https://w3id.org/okn/o/sdm#Model)
  # @param String! Id_ The ID of the Model to be retrieved
  # @param String! username Name of the user graph to query
  # @return [Model]
  ModelsIdGet(Id_: String!, username: String!): Model

}

