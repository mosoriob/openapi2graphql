# Model Catalog
# This is the API of the Software Description Ontology at [https://w3id.org/okn/o/sdm](https://w3id.org/okn/o/sdm)
# The version of the OpenAPI document: v1.5.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

# package openapi2graphql

# image_api

type mutation {
  # Delete an existing Image
  # Delete an existing Image (more information in https://w3id.org/okn/o/sd#Image)
  # @param String! Id_ The ID of the Image to be retrieved
  # @param String! user Username
  # @return [null]
  ImagesIdDelete(Id_: String!, user: String!): null

  # Update an existing Image
  # Updates an existing Image (more information in https://w3id.org/okn/o/sd#Image)
  # @param String! Id_ The ID of the Image to be retrieved
  # @param String! user Username
  # @param Image image An old Imageto be updated
  # @return [Image]
  ImagesIdPut(Id_: String!, user: String!, image: Image): Image

  # Create one Image
  # Create a new instance of Image (more information in https://w3id.org/okn/o/sd#Image)
  # @param String! user Username
  # @param Image image Information about the Imageto be created
  # @return [Image]
  ImagesPost(user: String!, image: Image): Image

}

type query {
  # List all instances of Image
  # Gets a list of all instances of Image (more information in https://w3id.org/okn/o/sd#Image)
  # @param String! username Name of the user graph to query
  # @param String! label Filter by label
  # @param Int! page Page number
  # @param Int! perPage Items per page
  # @return [[Image]]
  ImagesGet(username: String!, label: String!, page: Int!, perPage: Int!): [Image]

  # Get a single Image by its id
  # Gets the details of a given Image (more information in https://w3id.org/okn/o/sd#Image)
  # @param String! Id_ The ID of the Image to be retrieved
  # @param String! username Name of the user graph to query
  # @return [Image]
  ImagesIdGet(Id_: String!, username: String!): Image

}

