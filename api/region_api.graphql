# Model Catalog
# This is the API of the Software Description Ontology at [https://w3id.org/okn/o/sdm](https://w3id.org/okn/o/sdm)
# The version of the OpenAPI document: v1.5.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

# package openapi2graphql

# region_api

type mutation {
  # Delete an existing Region
  # Delete an existing Region (more information in https://w3id.org/okn/o/sdm#Region)
  # @param String! Id_ The ID of the Region to be retrieved
  # @param String! user Username
  # @return [null]
  RegionsIdDelete(Id_: String!, user: String!): null

  # Update an existing Region
  # Updates an existing Region (more information in https://w3id.org/okn/o/sdm#Region)
  # @param String! Id_ The ID of the Region to be retrieved
  # @param String! user Username
  # @param Region region An old Regionto be updated
  # @return [Region]
  RegionsIdPut(Id_: String!, user: String!, region: Region): Region

  # Create one Region
  # Create a new instance of Region (more information in https://w3id.org/okn/o/sdm#Region)
  # @param String! user Username
  # @param Region region Information about the Regionto be created
  # @return [Region]
  RegionsPost(user: String!, region: Region): Region

}

type query {
  # List all instances of Region
  # Gets a list of all instances of Region (more information in https://w3id.org/okn/o/sdm#Region)
  # @param String! username Name of the user graph to query
  # @param String! label Filter by label
  # @param Int! page Page number
  # @param Int! perPage Items per page
  # @return [[Region]]
  RegionsGet(username: String!, label: String!, page: Int!, perPage: Int!): [Region]

  # Get a single Region by its id
  # Gets the details of a given Region (more information in https://w3id.org/okn/o/sdm#Region)
  # @param String! Id_ The ID of the Region to be retrieved
  # @param String! username Name of the user graph to query
  # @return [Region]
  RegionsIdGet(Id_: String!, username: String!): Region

}

