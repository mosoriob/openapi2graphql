# Model Catalog
# This is the API of the Software Description Ontology at [https://w3id.org/okn/o/sdm](https://w3id.org/okn/o/sdm)
# The version of the OpenAPI document: v1.5.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

# package openapi2graphql

# person_api

type mutation {
  # Delete an existing Person
  # Delete an existing Person (more information in https://w3id.org/okn/o/sd#Person)
  # @param String! Id_ The ID of the Person to be retrieved
  # @param String! user Username
  # @return [null]
  PersonsIdDelete(Id_: String!, user: String!): null

  # Update an existing Person
  # Updates an existing Person (more information in https://w3id.org/okn/o/sd#Person)
  # @param String! Id_ The ID of the Person to be retrieved
  # @param String! user Username
  # @param Person person An old Personto be updated
  # @return [Person]
  PersonsIdPut(Id_: String!, user: String!, person: Person): Person

  # Create one Person
  # Create a new instance of Person (more information in https://w3id.org/okn/o/sd#Person)
  # @param String! user Username
  # @param Person person Information about the Personto be created
  # @return [Person]
  PersonsPost(user: String!, person: Person): Person

}

type query {
  # List all instances of Person
  # Gets a list of all instances of Person (more information in https://w3id.org/okn/o/sd#Person)
  # @param String! username Name of the user graph to query
  # @param String! label Filter by label
  # @param Int! page Page number
  # @param Int! perPage Items per page
  # @return [[Person]]
  PersonsGet(username: String!, label: String!, page: Int!, perPage: Int!): [Person]

  # Get a single Person by its id
  # Gets the details of a given Person (more information in https://w3id.org/okn/o/sd#Person)
  # @param String! Id_ The ID of the Person to be retrieved
  # @param String! username Name of the user graph to query
  # @return [Person]
  PersonsIdGet(Id_: String!, username: String!): Person

}

