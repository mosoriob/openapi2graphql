# Model Catalog
# This is the API of the Software Description Ontology at [https://w3id.org/okn/o/sdm](https://w3id.org/okn/o/sdm)
# The version of the OpenAPI document: v1.5.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

# package openapi2graphql

# organization_api

type mutation {
  # Delete an existing Organization
  # Delete an existing Organization (more information in https://w3id.org/okn/o/sd#Organization)
  # @param String! Id_ The ID of the Organization to be retrieved
  # @param String! user Username
  # @return [null]
  OrganizationsIdDelete(Id_: String!, user: String!): null

  # Update an existing Organization
  # Updates an existing Organization (more information in https://w3id.org/okn/o/sd#Organization)
  # @param String! Id_ The ID of the Organization to be retrieved
  # @param String! user Username
  # @param Organization organization An old Organizationto be updated
  # @return [Organization]
  OrganizationsIdPut(Id_: String!, user: String!, organization: Organization): Organization

  # Create one Organization
  # Create a new instance of Organization (more information in https://w3id.org/okn/o/sd#Organization)
  # @param String! user Username
  # @param Organization organization Information about the Organizationto be created
  # @return [Organization]
  OrganizationsPost(user: String!, organization: Organization): Organization

}

type query {
  # List all instances of Organization
  # Gets a list of all instances of Organization (more information in https://w3id.org/okn/o/sd#Organization)
  # @param String! username Name of the user graph to query
  # @param String! label Filter by label
  # @param Int! page Page number
  # @param Int! perPage Items per page
  # @return [[Organization]]
  OrganizationsGet(username: String!, label: String!, page: Int!, perPage: Int!): [Organization]

  # Get a single Organization by its id
  # Gets the details of a given Organization (more information in https://w3id.org/okn/o/sd#Organization)
  # @param String! Id_ The ID of the Organization to be retrieved
  # @param String! username Name of the user graph to query
  # @return [Organization]
  OrganizationsIdGet(Id_: String!, username: String!): Organization

}

