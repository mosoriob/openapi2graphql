# Model Catalog
# This is the API of the Software Description Ontology at [https://w3id.org/okn/o/sdm](https://w3id.org/okn/o/sdm)
# The version of the OpenAPI document: v1.5.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

# package openapi2graphql

# process_api

type mutation {
  # Delete an existing Process
  # Delete an existing Process (more information in https://w3id.org/okn/o/sdm#Process)
  # @param String! Id_ The ID of the Process to be retrieved
  # @param String! user Username
  # @return [null]
  ProcesssIdDelete(Id_: String!, user: String!): null

  # Update an existing Process
  # Updates an existing Process (more information in https://w3id.org/okn/o/sdm#Process)
  # @param String! Id_ The ID of the Process to be retrieved
  # @param String! user Username
  # @param Process process An old Processto be updated
  # @return [Process]
  ProcesssIdPut(Id_: String!, user: String!, process: Process): Process

  # Create one Process
  # Create a new instance of Process (more information in https://w3id.org/okn/o/sdm#Process)
  # @param String! user Username
  # @param Process process Information about the Processto be created
  # @return [Process]
  ProcesssPost(user: String!, process: Process): Process

}

type query {
  # List all instances of Process
  # Gets a list of all instances of Process (more information in https://w3id.org/okn/o/sdm#Process)
  # @param String! username Name of the user graph to query
  # @param String! label Filter by label
  # @param Int! page Page number
  # @param Int! perPage Items per page
  # @return [[Process]]
  ProcesssGet(username: String!, label: String!, page: Int!, perPage: Int!): [Process]

  # Get a single Process by its id
  # Gets the details of a given Process (more information in https://w3id.org/okn/o/sdm#Process)
  # @param String! Id_ The ID of the Process to be retrieved
  # @param String! username Name of the user graph to query
  # @return [Process]
  ProcesssIdGet(Id_: String!, username: String!): Process

}

