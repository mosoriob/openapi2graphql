# Model Catalog
# This is the API of the Software Description Ontology at [https://w3id.org/okn/o/sdm](https://w3id.org/okn/o/sdm)
# The version of the OpenAPI document: v1.5.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

# Description not available
type Software {

  # Instructions needed to download a software component. The difference with &#x60;hasDownloadURL&#x60; is that this property captures the human readable instructions required to download software. For example, sometimes an authentication is needed, users need to fill in a form, etc.
  hasDownloadInstructions: [String!]

  # Property that links a software project to its funding information
  hasFunding: [FundingInformation]

  # Keywords associated with a software component
  keywords: [String!]

  # Pointer to the documentation of the model
  hasDocumentation: [String!]

  # Property to link details, such as mailing lists in case a contact person is not provided
  supportDetails: [String!]

  # Description not available
  softwareRequirements: [String!]

  # Description not available
  hasVersion: [SoftwareVersion]

  # Description not available
  hasTypicalDataSource: [String!]

  # Download URL where to obtain the source/executable of the software
  hasDownloadURL: [String!]

  # small description
  description: [String!]

  # Main publication to cite for this software component
  referencePublication: [String!]

  # Description not available
  screenshot: [Image]

  # type of the resource
  type: [String!]

  # Instructions required to install this particular piece of software. Installation instructions usually are available in a human-readable manner.
  hasInstallationInstructions: [String!]

  # Property to identify the original source of the information of the annotated resource. It could be a web page, an organization, a person, some experiment notes, etc.
  hadPrimarySource: [TodoObjectMapping]

  # Pointer to the issue tracker of a software component
  issueTracker: [String!]

  # Description not available
  dateCreated: [String!]

  # Property that links a software component to other useful software that canbe used to visualize its outputs
  compatibleVisualizationSoftware: [Software]

  # Description not available
  contributor: [Person]

  # Description not available
  copyrightHolder: [TodoObjectMapping]

  # Frequently asked questions about a software
  hasFAQ: [String!]

  # Description not available
  logo: [Image]

  # Description not available
  hasContactPerson: [TodoObjectMapping]

  # Objective or main functionality that can be achieved by running this software
  hasPurpose: [String!]

  # identifier
  id: String!

  # Instructions that indicate how a software component should be executed. The difference with &#x60;hasExecutionCommand&#x60; is that the execution instructions aim to be human-readable, and have explanations between the different commands and instructions
  hasExecutableInstructions: [String!]

  # A typical sample visualization of the softwware outputs
  hasSampleVisualization: [Visualization]

  # Identifier of the resource being described
  identifier: [String!]

  # Description not available
  memoryRequirements: [String!]

  # Website of the software
  website: [String!]

  # How to cite this software
  citation: [String!]

  # Description not available
  author: [TodoObjectMapping]

  # Description not available
  processorRequirements: [String!]

  # Property that describes the usage considerations of a particular software. These notes capture the rationale of for that software configuration, along with an explanation for sample inputs, things to consider when running the model with data, etc.
  hasUsageNotes: [String!]

  # URl to the readme file of a software component
  readme: [String!]

  # A file (e.g., Dockerfile) with executable instructions indicating how a Software Image or a Software component is built
  hasBuildFile: [String!]

  # A summarized description of the resource
  shortDescription: [String!]

  # short description of the resource
  label: [String!]

  # Assumptions of a software, e.g. the solver being used for a particular model, the source of the data (e.g., all data must have a given resolution), etc.
  hasAssumption: [String!]

  # Description not available
  datePublished: [String!]

  # Description not available
  operatingSystems: [String!]

  # License of a software component or its source code
  license: [String!]

  # Description not available
  hasSourceCode: [SourceCode]

  # Property that links a software component with an executable notebook (e.g., Jupyter notebook) that illustrates how to use it in an executable manner.
  hasExecutableNotebook: [String!]

  # An example explaining a scenario where the software component was used in plain language.
  hasExample: [String!]

  # Description not available
  publisher: [TodoObjectMapping]

  # Property that indicates that a software component (or any of its outputs) can be used to calculate a particular index. The rationale for this property is that indices are usually calculated by applying post-processing steps to the outputs of a software component.
  usefulForCalculatingIndex: [NumericalIndex]

  # Digital Object Identifier associated with a software component
  doi: [String!]

}
