# Model Catalog
# This is the API of the Software Description Ontology at [https://w3id.org/okn/o/sdm](https://w3id.org/okn/o/sdm)
# The version of the OpenAPI document: v1.5.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

# Description not available
type Parameter {

  # Default accepted value of a variable presentation (or a parameter)
  hasDefaultValue: [TodoObjectMapping]

  # Maximum accepted value of a variable presentation (or a parameter)
  hasMaximumAcceptedValue: [TodoObjectMapping]

  # small description
  description: [String!]

  # Property that indicates the data type of a parameter
  hasDataType: [String!]

  # Value of a parameter in a software setup.
  hasFixedValue: [TodoObjectMapping]

  # Property that links an instance of a dataset (or a dataset specification) to the presentation of a variable contained (or expected to be contained) on it.
  hasPresentation: [VariablePresentation]

  # short description of the resource
  label: [String!]

  # Value that represents how a parameter should be incremented on each iteration of a software component execution. This value is important when preparing execution ensembles automatically, e.g., simulating crop production varying the parameter \&quot;fertilizer amount\&quot; in increments of 10%.
  recommendedIncrement: [Float!]

  # type of the resource
  type: [String!]

  # Minimum accepted value of a variable presentation (or a parameter)
  hasMinimumAcceptedValue: [TodoObjectMapping]

  # Property that constraints which values are accepted for a parameter. For example, the name of a crop can only be \&quot;Maize\&quot; or \&quot;Sorghum\&quot;
  hasAcceptedValues: [String!]

  # Property that links parameter with the variable they adjust. This property can be used when parameters quantify variables without directly representing them. For example, a \&quot;fertilizer percentage adjustment\&quot; parameter can quantify a \&quot;fertilizer price\&quot; variable
  adjustsVariable: [Variable]

  # Description not available
  relevantForIntervention: [Intervention]

  # Position of the parameter or input/output in the model configuration. This property is needed to know how to organize the I/O of the component on execution
  position: [Int!]

  # identifier
  id: String!

  # Property used to link a variable presentation or time interval to the unit they are represented in
  usesUnit: [Unit]

  # Property that determines what are the increments (step size) that are commonly used to vary a parameter. This is commonly used for automatically setting up software tests. For example, if I want to set up a model and try 30 reasonable values on a parameter, I may use the default value and the step size to create the appropriate increments. If the step size is 0.1 and the default value is 0, then I will will be able to create setups: 0, 0.1, 0.2...2.9,3
  hasStepSize: [Float!]

}
